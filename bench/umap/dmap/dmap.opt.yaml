--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: dmap.c, Line: 168, Column: 14 }
Function:        dmap
Args:
  - String:          ''''
  - Callee:          cap_to_bufsz
    DebugLoc:        { File: dmap.c, Line: 27, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          dmap
    DebugLoc:        { File: dmap.c, Line: 163, Column: 0 }
  - String:          ''''
  - String:          ': always inline attribute'
  - String:          ' at callsite '
  - String:          dmap
  - String:          ':'
  - Line:            '6'
  - String:          ':'
  - Column:          '14'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: dmap.c, Line: 169, Column: 20 }
Function:        dmap
Args:
  - String:          ''''
  - Callee:          bufsz_to_chnksz
    DebugLoc:        { File: dmap.c, Line: 34, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          dmap
    DebugLoc:        { File: dmap.c, Line: 163, Column: 0 }
  - String:          ''''
  - String:          ': always inline attribute'
  - String:          ' at callsite '
  - String:          dmap
  - String:          ':'
  - Line:            '7'
  - String:          ':'
  - Column:          '20'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: dmap.c, Line: 177, Column: 15 }
Function:        dmap
Args:
  - String:          ''''
  - Callee:          mrln_alloc
    DebugLoc:        { File: '../../../include/merlin/aloctr.h', Line: 38, 
                       Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          dmap
    DebugLoc:        { File: dmap.c, Line: 163, Column: 0 }
  - String:          ''''
  - String:          ': always inline attribute'
  - String:          ' at callsite '
  - String:          dmap
  - String:          ':'
  - Line:            '15'
  - String:          ':'
  - Column:          '15'
  - String:          ';'
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 181, Column: 5 }
Function:        dmap
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: dmap.c, Line: 176, Column: 14 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../../../include/merlin/aloctr.h', Line: 39, 
                       Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 184, Column: 13 }
Function:        dmap
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../../../include/merlin/aloctr.h', Line: 39, 
                       Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 184, Column: 25 }
Function:        dmap
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: dmap.c, Line: 168, Column: 12 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../../../include/merlin/aloctr.h', Line: 39, 
                       Column: 10 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: dmap.c, Line: 184, Column: 25 }
Function:        dmap
Args:
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 181, Column: 5 }
Function:        dmap
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: dmap.c, Line: 176, Column: 14 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../../../include/merlin/aloctr.h', Line: 39, 
                       Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 184, Column: 25 }
Function:        dmap
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: dmap.c, Line: 168, Column: 12 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../../../include/merlin/aloctr.h', Line: 39, 
                       Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 184, Column: 13 }
Function:        dmap
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../../../include/merlin/aloctr.h', Line: 39, 
                       Column: 10 }
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: dmap.c, Line: 190, Column: 9 }
Function:        dmap_destroy
Args:
  - String:          ''''
  - Callee:          mrln_alloc
    DebugLoc:        { File: '../../../include/merlin/aloctr.h', Line: 38, 
                       Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          dmap_destroy
    DebugLoc:        { File: dmap.c, Line: 188, Column: 0 }
  - String:          ''''
  - String:          ': always inline attribute'
  - String:          ' at callsite '
  - String:          dmap_destroy
  - String:          ':'
  - Line:            '2'
  - String:          ':'
  - Column:          '9'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: dmap.c, Line: 41, Column: 30 }
Function:        find
Args:
  - String:          ''''
  - Callee:          hash_to_ctrl
    DebugLoc:        { File: dmap.c, Line: 9, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          find
    DebugLoc:        { File: dmap.c, Line: 39, Column: 0 }
  - String:          ''''
  - String:          ': always inline attribute'
  - String:          ' at callsite '
  - String:          find
  - String:          ':'
  - Line:            '2'
  - String:          ':'
  - Column:          '30'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: dmap.c, Line: 41, Column: 14 }
Function:        find
Args:
  - String:          ''''
  - Callee:          mrln_v32u8_set1
  - String:          ''' inlined into '''
  - Caller:          find
    DebugLoc:        { File: dmap.c, Line: 39, Column: 0 }
  - String:          ''''
  - String:          ': always inline attribute'
  - String:          ' at callsite '
  - String:          find
  - String:          ':'
  - Line:            '2'
  - String:          ':'
  - Column:          '14'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: dmap.c, Line: 42, Column: 14 }
Function:        find
Args:
  - String:          ''''
  - Callee:          mrln_v32u8_set1
  - String:          ''' inlined into '''
  - Caller:          find
    DebugLoc:        { File: dmap.c, Line: 39, Column: 0 }
  - String:          ''''
  - String:          ': always inline attribute'
  - String:          ' at callsite '
  - String:          find
  - String:          ':'
  - Line:            '3'
  - String:          ':'
  - Column:          '14'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: dmap.c, Line: 46, Column: 16 }
Function:        find
Args:
  - String:          ''''
  - Callee:          keybufat
    DebugLoc:        { File: dmap.c, Line: 13, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          find
    DebugLoc:        { File: dmap.c, Line: 39, Column: 0 }
  - String:          ''''
  - String:          ': always inline attribute'
  - String:          ' at callsite '
  - String:          find
  - String:          ':'
  - Line:            '7'
  - String:          ':'
  - Column:          '16'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: dmap.c, Line: 52, Column: 13 }
Function:        find
Args:
  - String:          ''''
  - Callee:          mrln_v32u8_load_unaligned
  - String:          ''' inlined into '''
  - Caller:          find
    DebugLoc:        { File: dmap.c, Line: 39, Column: 0 }
  - String:          ''''
  - String:          ': always inline attribute'
  - String:          ' at callsite '
  - String:          find
  - String:          ':'
  - Line:            '13'
  - String:          ':'
  - Column:          '13'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: dmap.c, Line: 53, Column: 14 }
Function:        find
Args:
  - String:          ''''
  - Callee:          mrln_v32u8_cmpeq
    DebugLoc:        { File: '../../../include/merlin/simd.h', Line: 897, 
                       Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          find
    DebugLoc:        { File: dmap.c, Line: 39, Column: 0 }
  - String:          ''''
  - String:          ': always inline attribute'
  - String:          ' at callsite '
  - String:          find
  - String:          ':'
  - Line:            '14'
  - String:          ':'
  - Column:          '14'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: dmap.c, Line: 54, Column: 13 }
Function:        find
Args:
  - String:          ''''
  - Callee:          mrln_v32u8_mask
  - String:          ''' inlined into '''
  - Caller:          find
    DebugLoc:        { File: dmap.c, Line: 39, Column: 0 }
  - String:          ''''
  - String:          ': always inline attribute'
  - String:          ' at callsite '
  - String:          find
  - String:          ':'
  - Line:            '15'
  - String:          ':'
  - Column:          '13'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: dmap.c, Line: 66, Column: 14 }
Function:        find
Args:
  - String:          ''''
  - Callee:          mrln_v32u8_cmpeq
    DebugLoc:        { File: '../../../include/merlin/simd.h', Line: 897, 
                       Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          find
    DebugLoc:        { File: dmap.c, Line: 39, Column: 0 }
  - String:          ''''
  - String:          ': always inline attribute'
  - String:          ' at callsite '
  - String:          find
  - String:          ':'
  - Line:            '27'
  - String:          ':'
  - Column:          '14'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: dmap.c, Line: 67, Column: 9 }
Function:        find
Args:
  - String:          ''''
  - Callee:          mrln_v32u8_mask
  - String:          ''' inlined into '''
  - Caller:          find
    DebugLoc:        { File: dmap.c, Line: 39, Column: 0 }
  - String:          ''''
  - String:          ': always inline attribute'
  - String:          ' at callsite '
  - String:          find
  - String:          ':'
  - Line:            '28'
  - String:          ':'
  - Column:          '9'
  - String:          ';'
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: dmap.c, Line: 61, Column: 33 }
Function:        find
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: dmap.c, Line: 61, Column: 33 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: dmap.c, Line: 68, Column: 9 }
Function:        find
Args:
  - String:          'sinking '
  - Inst:            and
    DebugLoc:        { File: dmap.c, Line: 68, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: dmap.c, Line: 68, Column: 9 }
Function:        find
Args:
  - String:          'sinking '
  - Inst:            add
    DebugLoc:        { File: dmap.c, Line: 68, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: dmap.c, Line: 68, Column: 9 }
Function:        find
Args:
  - String:          'sinking '
  - Inst:            call
    DebugLoc:        { File: dmap.c, Line: 68, Column: 9 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: dmap.c, Line: 52, Column: 57 }
Function:        find
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: dmap.c, Line: 52, Column: 57 }
Function:        find
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        find
Args:
  - String:          'hoisting '
  - Inst:            zext
...
--- !Passed
Pass:            TTI
Name:            DontUnroll
DebugLoc:        { File: dmap.c, Line: 56, Column: 5 }
Function:        find
Args:
  - String:          'advising against unrolling the loop because it contains a '
  - Call:            call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Passed
Pass:            TTI
Name:            DontUnroll
DebugLoc:        { File: dmap.c, Line: 51, Column: 3 }
Function:        find
Args:
  - String:          'advising against unrolling the loop because it contains a '
  - Call:            call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 52, Column: 57 }
Function:        find
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: dmap.c, Line: 52, Column: 57 }
Function:        find
Args:
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 52, Column: 57 }
Function:        find
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 52, Column: 57 }
Function:        find
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: dmap.c, Line: 52, Column: 57 }
Function:        find
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: dmap.c, Line: 197, Column: 10 }
Function:        dmap_find
Args:
  - String:          ''''
  - Callee:          find
    DebugLoc:        { File: dmap.c, Line: 39, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          dmap_find
    DebugLoc:        { File: dmap.c, Line: 195, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '155'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
  - String:          ' at callsite '
  - String:          dmap_find
  - String:          ':'
  - Line:            '2'
  - String:          ':'
  - Column:          '10'
  - String:          ';'
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: dmap.c, Line: 52, Column: 57 }
Function:        dmap_find
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: dmap.c, Line: 52, Column: 57 }
Function:        dmap_find
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            TTI
Name:            DontUnroll
DebugLoc:        { File: dmap.c, Line: 56, Column: 5 }
Function:        dmap_find
Args:
  - String:          'advising against unrolling the loop because it contains a '
  - Call:            call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Passed
Pass:            TTI
Name:            DontUnroll
DebugLoc:        { File: dmap.c, Line: 51, Column: 3 }
Function:        dmap_find
Args:
  - String:          'advising against unrolling the loop because it contains a '
  - Call:            call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 40, Column: 16 }
Function:        dmap_find
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 196, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
Function:        dmap_find
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 196, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
Function:        dmap_find
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 196, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 49, Column: 17 }
Function:        dmap_find
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 196, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 52, Column: 57 }
Function:        dmap_find
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 40, Column: 16 }
Function:        dmap_find
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 196, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
Function:        dmap_find
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 196, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
Function:        dmap_find
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 196, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 49, Column: 17 }
Function:        dmap_find
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 196, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 52, Column: 57 }
Function:        dmap_find
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: dmap.c, Line: 52, Column: 57 }
Function:        dmap_find
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: dmap.c, Line: 201, Column: 11 }
Function:        dmap_contains
Args:
  - String:          ''''
  - Callee:          dmap_find
    DebugLoc:        { File: dmap.c, Line: 195, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          dmap_contains
    DebugLoc:        { File: dmap.c, Line: 200, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '175'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
  - String:          ' at callsite '
  - String:          dmap_contains
  - String:          ':'
  - Line:            '1'
  - String:          ':'
  - Column:          '11'
  - String:          ';'
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: dmap.c, Line: 52, Column: 57 }
Function:        dmap_contains
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: dmap.c, Line: 52, Column: 57 }
Function:        dmap_contains
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            TTI
Name:            DontUnroll
DebugLoc:        { File: dmap.c, Line: 56, Column: 5 }
Function:        dmap_contains
Args:
  - String:          'advising against unrolling the loop because it contains a '
  - Call:            call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Passed
Pass:            TTI
Name:            DontUnroll
DebugLoc:        { File: dmap.c, Line: 51, Column: 3 }
Function:        dmap_contains
Args:
  - String:          'advising against unrolling the loop because it contains a '
  - Call:            call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 40, Column: 16 }
Function:        dmap_contains
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 196, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
Function:        dmap_contains
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 196, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
Function:        dmap_contains
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 196, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 49, Column: 17 }
Function:        dmap_contains
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 196, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 202, Column: 13 }
Function:        dmap_contains
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 52, Column: 57 }
Function:        dmap_contains
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 40, Column: 16 }
Function:        dmap_contains
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 196, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
Function:        dmap_contains
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 196, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
Function:        dmap_contains
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 196, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 49, Column: 17 }
Function:        dmap_contains
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 196, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 202, Column: 13 }
Function:        dmap_contains
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 52, Column: 57 }
Function:        dmap_contains
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: dmap.c, Line: 52, Column: 57 }
Function:        dmap_contains
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: dmap.c, Line: 210, Column: 10 }
Function:        dmap_key
Args:
  - String:          ''''
  - Callee:          keybufat
    DebugLoc:        { File: dmap.c, Line: 13, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          dmap_key
    DebugLoc:        { File: dmap.c, Line: 209, Column: 0 }
  - String:          ''''
  - String:          ': always inline attribute'
  - String:          ' at callsite '
  - String:          dmap_key
  - String:          ':'
  - Line:            '1'
  - String:          ':'
  - Column:          '10'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: dmap.c, Line: 214, Column: 10 }
Function:        dmap_val
Args:
  - String:          ''''
  - Callee:          valbufat
    DebugLoc:        { File: dmap.c, Line: 20, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          dmap_val
    DebugLoc:        { File: dmap.c, Line: 213, Column: 0 }
  - String:          ''''
  - String:          ': always inline attribute'
  - String:          ' at callsite '
  - String:          dmap_val
  - String:          ':'
  - Line:            '1'
  - String:          ':'
  - Column:          '10'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: dmap.c, Line: 77, Column: 11 }
Function:        find_empty
Args:
  - String:          ''''
  - Callee:          mrln_v32u8_set1
  - String:          ''' inlined into '''
  - Caller:          find_empty
    DebugLoc:        { File: dmap.c, Line: 74, Column: 0 }
  - String:          ''''
  - String:          ': always inline attribute'
  - String:          ' at callsite '
  - String:          find_empty
  - String:          ':'
  - Line:            '3'
  - String:          ':'
  - Column:          '11'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: dmap.c, Line: 80, Column: 13 }
Function:        find_empty
Args:
  - String:          ''''
  - Callee:          mrln_v32u8_load_unaligned
  - String:          ''' inlined into '''
  - Caller:          find_empty
    DebugLoc:        { File: dmap.c, Line: 74, Column: 0 }
  - String:          ''''
  - String:          ': always inline attribute'
  - String:          ' at callsite '
  - String:          find_empty
  - String:          ':'
  - Line:            '6'
  - String:          ':'
  - Column:          '13'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: dmap.c, Line: 81, Column: 13 }
Function:        find_empty
Args:
  - String:          ''''
  - Callee:          mrln_v32u8_cmpeq
  - String:          ''' inlined into '''
  - Caller:          find_empty
    DebugLoc:        { File: dmap.c, Line: 74, Column: 0 }
  - String:          ''''
  - String:          ': always inline attribute'
  - String:          ' at callsite '
  - String:          find_empty
  - String:          ':'
  - Line:            '7'
  - String:          ':'
  - Column:          '13'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: dmap.c, Line: 82, Column: 13 }
Function:        find_empty
Args:
  - String:          ''''
  - Callee:          mrln_v32u8_mask
  - String:          ''' inlined into '''
  - Caller:          find_empty
    DebugLoc:        { File: dmap.c, Line: 74, Column: 0 }
  - String:          ''''
  - String:          ': always inline attribute'
  - String:          ' at callsite '
  - String:          find_empty
  - String:          ':'
  - Line:            '8'
  - String:          ':'
  - Column:          '13'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: dmap.c, Line: 110, Column: 26 }
Function:        rehash_to
Args:
  - String:          ''''
  - Callee:          bufsz_to_chnksz
    DebugLoc:        { File: dmap.c, Line: 34, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          rehash_to
    DebugLoc:        { File: dmap.c, Line: 90, Column: 0 }
  - String:          ''''
  - String:          ': always inline attribute'
  - String:          ' at callsite '
  - String:          rehash_to
  - String:          ':'
  - Line:            '21'
  - String:          ':'
  - Column:          '26'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: dmap.c, Line: 109, Column: 15 }
Function:        rehash_to
Args:
  - String:          ''''
  - Callee:          mrln_alloc
    DebugLoc:        { File: '../../../include/merlin/aloctr.h', Line: 38, 
                       Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          rehash_to
    DebugLoc:        { File: dmap.c, Line: 90, Column: 0 }
  - String:          ''''
  - String:          ': always inline attribute'
  - String:          ' at callsite '
  - String:          rehash_to
  - String:          ':'
  - Line:            '20'
  - String:          ':'
  - Column:          '15'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: dmap.c, Line: 117, Column: 25 }
Function:        rehash_to
Args:
  - String:          ''''
  - Callee:          keybufat
    DebugLoc:        { File: dmap.c, Line: 13, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          rehash_to
    DebugLoc:        { File: dmap.c, Line: 90, Column: 0 }
  - String:          ''''
  - String:          ': always inline attribute'
  - String:          ' at callsite '
  - String:          rehash_to
  - String:          ':'
  - Line:            '28'
  - String:          ':'
  - Column:          '25'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: dmap.c, Line: 118, Column: 25 }
Function:        rehash_to
Args:
  - String:          ''''
  - Callee:          valbufat
    DebugLoc:        { File: dmap.c, Line: 20, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          rehash_to
    DebugLoc:        { File: dmap.c, Line: 90, Column: 0 }
  - String:          ''''
  - String:          ': always inline attribute'
  - String:          ' at callsite '
  - String:          rehash_to
  - String:          ':'
  - Line:            '29'
  - String:          ':'
  - Column:          '25'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: dmap.c, Line: 124, Column: 37 }
Function:        rehash_to
Args:
  - String:          ''''
  - Callee:          keybufat
    DebugLoc:        { File: dmap.c, Line: 13, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          rehash_to
    DebugLoc:        { File: dmap.c, Line: 90, Column: 0 }
  - String:          ''''
  - String:          ': always inline attribute'
  - String:          ' at callsite '
  - String:          rehash_to
  - String:          ':'
  - Line:            '35'
  - String:          ':'
  - Column:          '37'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: dmap.c, Line: 125, Column: 37 }
Function:        rehash_to
Args:
  - String:          ''''
  - Callee:          valbufat
    DebugLoc:        { File: dmap.c, Line: 20, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          rehash_to
    DebugLoc:        { File: dmap.c, Line: 90, Column: 0 }
  - String:          ''''
  - String:          ': always inline attribute'
  - String:          ' at callsite '
  - String:          rehash_to
  - String:          ':'
  - Line:            '36'
  - String:          ':'
  - Column:          '37'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: dmap.c, Line: 145, Column: 11 }
Function:        rehash_to
Args:
  - String:          ''''
  - Callee:          mrln_alloc
  - String:          ''' inlined into '''
  - Caller:          rehash_to
    DebugLoc:        { File: dmap.c, Line: 90, Column: 0 }
  - String:          ''''
  - String:          ': always inline attribute'
  - String:          ' at callsite '
  - String:          rehash_to
  - String:          ':'
  - Line:            '56'
  - String:          ':'
  - Column:          '11'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: dmap.c, Line: 133, Column: 13 }
Function:        rehash_to
Args:
  - String:          ''''
  - Callee:          find_empty
  - String:          ''' inlined into '''
  - Caller:          rehash_to
    DebugLoc:        { File: dmap.c, Line: 90, Column: 0 }
  - String:          ''''
  - String:          ': always inline attribute'
  - String:          ' at callsite '
  - String:          rehash_to
  - String:          ':'
  - Line:            '44'
  - String:          ':'
  - Column:          '13'
  - String:          ';'
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: dmap.c, Line: 134, Column: 9 }
Function:        rehash_to
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: dmap.c, Line: 136, Column: 11 }
Function:        rehash_to
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: dmap.c, Line: 136, Column: 24 }
Function:        rehash_to
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: dmap.c, Line: 133, Column: 13 }
Function:        rehash_to
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: dmap.c, Line: 133, Column: 13 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: dmap.c, Line: 133, Column: 13 }
Function:        rehash_to
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: dmap.c, Line: 133, Column: 13 }
Function:        rehash_to
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: dmap.c, Line: 133, Column: 13 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: dmap.c, Line: 133, Column: 13 }
Function:        rehash_to
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: dmap.c, Line: 134, Column: 9 }
Function:        rehash_to
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: dmap.c, Line: 136, Column: 11 }
Function:        rehash_to
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: dmap.c, Line: 136, Column: 24 }
Function:        rehash_to
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: dmap.c, Line: 138, Column: 51 }
Function:        rehash_to
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: dmap.c, Line: 138, Column: 51 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: dmap.c, Line: 139, Column: 28 }
Function:        rehash_to
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: dmap.c, Line: 139, Column: 28 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: dmap.c, Line: 139, Column: 51 }
Function:        rehash_to
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: dmap.c, Line: 139, Column: 51 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: dmap.c, Line: 127, Column: 56 }
Function:        rehash_to
Args:
  - String:          'hoisting '
  - Inst:            zext
    DebugLoc:        { File: dmap.c, Line: 127, Column: 56 }
...
--- !Passed
Pass:            TTI
Name:            DontUnroll
DebugLoc:        { File: dmap.c, Line: 127, Column: 3 }
Function:        rehash_to
Args:
  - String:          'advising against unrolling the loop because it contains a '
  - Call:            call
    DebugLoc:        { File: dmap.c, Line: 132, Column: 13 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 114, Column: 16 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: dmap.c, Line: 96, Column: 16 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../../../include/merlin/aloctr.h', Line: 39, 
                       Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 93, Column: 17 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 114, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 16, Column: 3 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 94, Column: 16 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 114, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 97, Column: 19 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 114, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 24, Column: 65 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 98, Column: 19 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 114, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 114, Column: 16 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 114, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 16, Column: 3 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: dmap.c, Line: 96, Column: 16 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 114, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: dmap.c, Line: 96, Column: 16 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 114, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 128, Column: 14 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 115, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 133, Column: 13 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 132, Column: 13 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 133, Column: 13 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 16, Column: 3 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 132, Column: 13 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 80, Column: 13 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            '<32 x i8>'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 132, Column: 13 }
...
--- !Passed
Pass:            gvn
Name:            LoadElim
DebugLoc:        { File: dmap.c, Line: 134, Column: 9 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' eliminated'
  - String:          ' in favor of '
  - InfavorOfValue:  load
    DebugLoc:        { File: dmap.c, Line: 133, Column: 13 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 136, Column: 11 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 133, Column: 13 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: dmap.c, Line: 134, Column: 17 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 136, Column: 24 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 133, Column: 13 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: dmap.c, Line: 134, Column: 17 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 144, Column: 26 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 139, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 144, Column: 26 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 114, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../../../include/merlin/aloctr.h', Line: 39, 
                   Column: 39 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: '../../../include/merlin/aloctr.h', Line: 39, 
                       Column: 39 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 114, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../../../include/merlin/aloctr.h', Line: 39, 
                   Column: 39 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: '../../../include/merlin/aloctr.h', Line: 39, 
                       Column: 39 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 139, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 146, Column: 19 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../../../include/merlin/aloctr.h', Line: 39, 
                       Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 149, Column: 21 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: dmap.c, Line: 96, Column: 16 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../../../include/merlin/aloctr.h', Line: 39, 
                       Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 114, Column: 16 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: dmap.c, Line: 96, Column: 16 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../../../include/merlin/aloctr.h', Line: 39, 
                       Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 93, Column: 17 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 114, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 16, Column: 3 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 94, Column: 16 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 114, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 97, Column: 19 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 114, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 24, Column: 65 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 98, Column: 19 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 114, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 114, Column: 16 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 114, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 16, Column: 3 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: dmap.c, Line: 96, Column: 16 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 114, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: dmap.c, Line: 96, Column: 16 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 114, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 128, Column: 14 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            i8
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 115, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 133, Column: 13 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 132, Column: 13 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 133, Column: 13 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 16, Column: 3 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 132, Column: 13 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 80, Column: 13 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            '<32 x i8>'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 132, Column: 13 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 136, Column: 11 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 133, Column: 13 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: dmap.c, Line: 134, Column: 17 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 136, Column: 24 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 133, Column: 13 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: dmap.c, Line: 134, Column: 17 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 144, Column: 26 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 139, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 144, Column: 26 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 114, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../../../include/merlin/aloctr.h', Line: 39, 
                   Column: 39 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: '../../../include/merlin/aloctr.h', Line: 39, 
                       Column: 39 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 114, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../../../include/merlin/aloctr.h', Line: 39, 
                   Column: 39 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: '../../../include/merlin/aloctr.h', Line: 39, 
                       Column: 39 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 139, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 146, Column: 19 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../../../include/merlin/aloctr.h', Line: 39, 
                       Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 149, Column: 21 }
Function:        rehash_to
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: dmap.c, Line: 96, Column: 16 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../../../include/merlin/aloctr.h', Line: 39, 
                       Column: 10 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: dmap.c, Line: 133, Column: 13 }
Function:        rehash_to
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: dmap.c, Line: 133, Column: 13 }
Function:        rehash_to
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: dmap.c, Line: 136, Column: 11 }
Function:        rehash_to
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: dmap.c, Line: 136, Column: 24 }
Function:        rehash_to
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: dmap.c, Line: 157, Column: 12 }
Function:        grow_if
Args:
  - String:          ''''
  - Callee:          rehash_to
    DebugLoc:        { File: dmap.c, Line: 90, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          grow_if
    DebugLoc:        { File: dmap.c, Line: 154, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '505'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: dmap.c, Line: 230, Column: 12 }
Function:        dmap_insert
Args:
  - String:          ''''
  - Callee:          valbufat
    DebugLoc:        { File: dmap.c, Line: 20, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          dmap_insert
    DebugLoc:        { File: dmap.c, Line: 219, Column: 0 }
  - String:          ''''
  - String:          ': always inline attribute'
  - String:          ' at callsite '
  - String:          dmap_insert
  - String:          ':'
  - Line:            '12'
  - String:          ':'
  - Column:          '12'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: dmap.c, Line: 236, Column: 12 }
Function:        dmap_insert
Args:
  - String:          ''''
  - Callee:          hash_to_ctrl
    DebugLoc:        { File: dmap.c, Line: 9, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          dmap_insert
    DebugLoc:        { File: dmap.c, Line: 219, Column: 0 }
  - String:          ''''
  - String:          ': always inline attribute'
  - String:          ' at callsite '
  - String:          dmap_insert
  - String:          ':'
  - Line:            '18'
  - String:          ':'
  - Column:          '12'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: dmap.c, Line: 243, Column: 10 }
Function:        dmap_insert
Args:
  - String:          ''''
  - Callee:          keybufat
    DebugLoc:        { File: dmap.c, Line: 13, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          dmap_insert
    DebugLoc:        { File: dmap.c, Line: 219, Column: 0 }
  - String:          ''''
  - String:          ': always inline attribute'
  - String:          ' at callsite '
  - String:          dmap_insert
  - String:          ':'
  - Line:            '25'
  - String:          ':'
  - Column:          '10'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: dmap.c, Line: 244, Column: 10 }
Function:        dmap_insert
Args:
  - String:          ''''
  - Callee:          valbufat
    DebugLoc:        { File: dmap.c, Line: 20, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          dmap_insert
    DebugLoc:        { File: dmap.c, Line: 219, Column: 0 }
  - String:          ''''
  - String:          ': always inline attribute'
  - String:          ' at callsite '
  - String:          dmap_insert
  - String:          ':'
  - Line:            '26'
  - String:          ':'
  - Column:          '10'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: dmap.c, Line: 222, Column: 13 }
Function:        dmap_insert
Args:
  - String:          ''''
  - Callee:          grow_if
    DebugLoc:        { File: dmap.c, Line: 154, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          dmap_insert
    DebugLoc:        { File: dmap.c, Line: 219, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '50'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
  - String:          ' at callsite '
  - String:          dmap_insert
  - String:          ':'
  - Line:            '4'
  - String:          ':'
  - Column:          '13'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: dmap.c, Line: 227, Column: 11 }
Function:        dmap_insert
Args:
  - String:          ''''
  - Callee:          find
    DebugLoc:        { File: dmap.c, Line: 39, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          dmap_insert
    DebugLoc:        { File: dmap.c, Line: 219, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '155'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
  - String:          ' at callsite '
  - String:          dmap_insert
  - String:          ':'
  - Line:            '9'
  - String:          ':'
  - Column:          '11'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: dmap.c, Line: 157, Column: 12 }
Function:        dmap_insert
Args:
  - String:          ''''
  - Callee:          rehash_to
    DebugLoc:        { File: dmap.c, Line: 90, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          dmap_insert
    DebugLoc:        { File: dmap.c, Line: 219, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '505'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: dmap.c, Line: 52, Column: 57 }
Function:        dmap_insert
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: dmap.c, Line: 52, Column: 57 }
Function:        dmap_insert
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            TTI
Name:            DontUnroll
DebugLoc:        { File: dmap.c, Line: 56, Column: 5 }
Function:        dmap_insert
Args:
  - String:          'advising against unrolling the loop because it contains a '
  - Call:            call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Passed
Pass:            TTI
Name:            DontUnroll
DebugLoc:        { File: dmap.c, Line: 51, Column: 3 }
Function:        dmap_insert
Args:
  - String:          'advising against unrolling the loop because it contains a '
  - Call:            call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 155, Column: 19 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 220, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 155, Column: 28 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 220, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 155, Column: 40 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 220, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 40, Column: 16 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 155, Column: 40 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 157, Column: 12 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: dmap.c, Line: 40, Column: 16 }
Function:        dmap_insert
Args:
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 157, Column: 12 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 220, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 157, Column: 12 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 220, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 49, Column: 17 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 220, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 49, Column: 17 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 157, Column: 12 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 229, Column: 10 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 23, Column: 3 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 155, Column: 40 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 24, Column: 39 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 24, Column: 65 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 220, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 24, Column: 65 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 157, Column: 12 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 24, Column: 65 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 234, Column: 10 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 155, Column: 19 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 157, Column: 12 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 234, Column: 10 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 155, Column: 19 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 240, Column: 8 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 229, Column: 10 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: dmap.c, Line: 238, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 240, Column: 20 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 155, Column: 40 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: dmap.c, Line: 238, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 229, Column: 10 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: dmap.c, Line: 238, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 229, Column: 10 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: dmap.c, Line: 240, Column: 27 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 16, Column: 3 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 155, Column: 40 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: dmap.c, Line: 238, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 16, Column: 3 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 155, Column: 40 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: dmap.c, Line: 240, Column: 27 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: dmap.c, Line: 238, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: dmap.c, Line: 240, Column: 27 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 22, Column: 3 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 243, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 23, Column: 3 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 16, Column: 3 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 243, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 24, Column: 39 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 243, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 24, Column: 65 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 243, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 52, Column: 57 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 155, Column: 19 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 220, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 155, Column: 28 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 220, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 155, Column: 40 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 220, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 40, Column: 16 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 155, Column: 40 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 157, Column: 12 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 157, Column: 12 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 220, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 157, Column: 12 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 220, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 49, Column: 17 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 220, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 49, Column: 17 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 157, Column: 12 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 229, Column: 10 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 23, Column: 3 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 155, Column: 40 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 24, Column: 39 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 24, Column: 65 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 220, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 24, Column: 65 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 157, Column: 12 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 24, Column: 65 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 234, Column: 10 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 155, Column: 19 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 234, Column: 10 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 155, Column: 19 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 157, Column: 12 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 240, Column: 8 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 229, Column: 10 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: dmap.c, Line: 238, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 240, Column: 20 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 155, Column: 40 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: dmap.c, Line: 238, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 229, Column: 10 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: dmap.c, Line: 238, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 229, Column: 10 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: dmap.c, Line: 240, Column: 27 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 16, Column: 3 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 155, Column: 40 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: dmap.c, Line: 238, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 16, Column: 3 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 155, Column: 40 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: dmap.c, Line: 240, Column: 27 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: dmap.c, Line: 238, Column: 14 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: dmap.c, Line: 240, Column: 27 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 22, Column: 3 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 243, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 23, Column: 3 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 16, Column: 3 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 243, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 24, Column: 39 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 243, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 24, Column: 65 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 243, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 52, Column: 57 }
Function:        dmap_insert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: dmap.c, Line: 52, Column: 57 }
Function:        dmap_insert
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: dmap.c, Line: 261, Column: 14 }
Function:        dmap_upsert
Args:
  - String:          ''''
  - Callee:          hash_to_ctrl
  - String:          ''' inlined into '''
  - Caller:          dmap_upsert
    DebugLoc:        { File: dmap.c, Line: 250, Column: 0 }
  - String:          ''''
  - String:          ': always inline attribute'
  - String:          ' at callsite '
  - String:          dmap_upsert
  - String:          ':'
  - Line:            '12'
  - String:          ':'
  - Column:          '14'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: dmap.c, Line: 266, Column: 12 }
Function:        dmap_upsert
Args:
  - String:          ''''
  - Callee:          keybufat
    DebugLoc:        { File: dmap.c, Line: 13, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          dmap_upsert
    DebugLoc:        { File: dmap.c, Line: 250, Column: 0 }
  - String:          ''''
  - String:          ': always inline attribute'
  - String:          ' at callsite '
  - String:          dmap_upsert
  - String:          ':'
  - Line:            '17'
  - String:          ':'
  - Column:          '12'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: dmap.c, Line: 267, Column: 12 }
Function:        dmap_upsert
Args:
  - String:          ''''
  - Callee:          valbufat
    DebugLoc:        { File: dmap.c, Line: 20, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          dmap_upsert
    DebugLoc:        { File: dmap.c, Line: 250, Column: 0 }
  - String:          ''''
  - String:          ': always inline attribute'
  - String:          ' at callsite '
  - String:          dmap_upsert
  - String:          ':'
  - Line:            '18'
  - String:          ':'
  - Column:          '12'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: dmap.c, Line: 269, Column: 15 }
Function:        dmap_upsert
Args:
  - String:          ''''
  - Callee:          valbufat
    DebugLoc:        { File: dmap.c, Line: 20, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          dmap_upsert
    DebugLoc:        { File: dmap.c, Line: 250, Column: 0 }
  - String:          ''''
  - String:          ': always inline attribute'
  - String:          ' at callsite '
  - String:          dmap_upsert
  - String:          ':'
  - Line:            '20'
  - String:          ':'
  - Column:          '15'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: dmap.c, Line: 253, Column: 13 }
Function:        dmap_upsert
Args:
  - String:          ''''
  - Callee:          grow_if
  - String:          ''' inlined into '''
  - Caller:          dmap_upsert
    DebugLoc:        { File: dmap.c, Line: 250, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-14950'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
  - String:          ' at callsite '
  - String:          dmap_upsert
  - String:          ':'
  - Line:            '4'
  - String:          ':'
  - Column:          '13'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: dmap.c, Line: 258, Column: 11 }
Function:        dmap_upsert
Args:
  - String:          ''''
  - Callee:          find
  - String:          ''' inlined into '''
  - Caller:          dmap_upsert
    DebugLoc:        { File: dmap.c, Line: 250, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-14845'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
  - String:          ' at callsite '
  - String:          dmap_upsert
  - String:          ':'
  - Line:            '9'
  - String:          ':'
  - Column:          '11'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: dmap.c, Line: 157, Column: 12 }
Function:        dmap_upsert
Args:
  - String:          ''''
  - Callee:          rehash_to
    DebugLoc:        { File: dmap.c, Line: 90, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          dmap_upsert
    DebugLoc:        { File: dmap.c, Line: 250, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '505'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: dmap.c, Line: 52, Column: 57 }
Function:        dmap_upsert
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: dmap.c, Line: 52, Column: 57 }
Function:        dmap_upsert
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            TTI
Name:            DontUnroll
DebugLoc:        { File: dmap.c, Line: 56, Column: 5 }
Function:        dmap_upsert
Args:
  - String:          'advising against unrolling the loop because it contains a '
  - Call:            call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Passed
Pass:            TTI
Name:            DontUnroll
DebugLoc:        { File: dmap.c, Line: 51, Column: 3 }
Function:        dmap_upsert
Args:
  - String:          'advising against unrolling the loop because it contains a '
  - Call:            call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 155, Column: 19 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 251, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 155, Column: 28 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 251, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 155, Column: 40 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 251, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 40, Column: 16 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 155, Column: 40 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 157, Column: 12 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: dmap.c, Line: 40, Column: 16 }
Function:        dmap_upsert
Args:
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 157, Column: 12 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 251, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 157, Column: 12 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 251, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 49, Column: 17 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 251, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 49, Column: 17 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 157, Column: 12 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 259, Column: 11 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 260, Column: 12 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 155, Column: 19 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 157, Column: 12 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 260, Column: 12 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 155, Column: 19 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 264, Column: 10 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 259, Column: 11 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: dmap.c, Line: 262, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 264, Column: 22 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 155, Column: 40 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: dmap.c, Line: 262, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 259, Column: 11 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: dmap.c, Line: 262, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 259, Column: 11 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: dmap.c, Line: 264, Column: 29 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 16, Column: 3 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 155, Column: 40 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: dmap.c, Line: 262, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 16, Column: 3 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 155, Column: 40 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: dmap.c, Line: 264, Column: 29 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: dmap.c, Line: 262, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: dmap.c, Line: 264, Column: 29 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 22, Column: 3 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 266, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 23, Column: 3 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 16, Column: 3 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 266, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 24, Column: 39 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 266, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 24, Column: 65 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 266, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 22, Column: 3 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 259, Column: 11 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 267, Column: 5 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: dmap.c, Line: 22, Column: 3 }
Function:        dmap_upsert
Args:
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 23, Column: 3 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 155, Column: 40 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 23, Column: 3 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 155, Column: 40 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 267, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 24, Column: 39 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 24, Column: 39 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 267, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 24, Column: 65 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 267, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 24, Column: 65 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 251, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 24, Column: 65 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 157, Column: 12 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 24, Column: 65 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 52, Column: 57 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 155, Column: 19 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 251, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 155, Column: 28 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 251, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 155, Column: 40 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 251, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 40, Column: 16 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 155, Column: 40 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 157, Column: 12 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 157, Column: 12 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 251, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 157, Column: 12 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 251, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 49, Column: 17 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 251, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 49, Column: 17 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 157, Column: 12 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 259, Column: 11 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 260, Column: 12 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 155, Column: 19 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 157, Column: 12 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 260, Column: 12 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 155, Column: 19 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 264, Column: 10 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 259, Column: 11 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: dmap.c, Line: 262, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 264, Column: 22 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 155, Column: 40 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: dmap.c, Line: 262, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 259, Column: 11 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: dmap.c, Line: 262, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 259, Column: 11 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: dmap.c, Line: 264, Column: 29 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 16, Column: 3 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 155, Column: 40 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: dmap.c, Line: 262, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 16, Column: 3 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 155, Column: 40 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: dmap.c, Line: 264, Column: 29 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: dmap.c, Line: 262, Column: 16 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: dmap.c, Line: 264, Column: 29 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 22, Column: 3 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 266, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 23, Column: 3 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 16, Column: 3 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 266, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 24, Column: 39 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 266, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 24, Column: 65 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 266, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 22, Column: 3 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 22, Column: 3 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 267, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 23, Column: 3 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 155, Column: 40 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 23, Column: 3 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 155, Column: 40 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 267, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 24, Column: 39 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 24, Column: 39 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 17, Column: 39 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 267, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 24, Column: 65 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 267, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 24, Column: 65 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 251, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 24, Column: 65 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 157, Column: 12 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 24, Column: 65 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            i16
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: dmap.c, Line: 52, Column: 57 }
Function:        dmap_upsert
Args:
  - String:          'load of type '
  - Type:            ptr
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: dmap.c, Line: 15, Column: 3 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: dmap.c, Line: 52, Column: 57 }
Function:        dmap_upsert
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: dmap.c, Line: 275, Column: 23 }
Function:        dmap_reserve
Args:
  - String:          ''''
  - Callee:          cap_to_bufsz
    DebugLoc:        { File: dmap.c, Line: 27, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          dmap_reserve
    DebugLoc:        { File: dmap.c, Line: 274, Column: 0 }
  - String:          ''''
  - String:          ': always inline attribute'
  - String:          ' at callsite '
  - String:          dmap_reserve
  - String:          ':'
  - Line:            '1'
  - String:          ':'
  - Column:          '23'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            TooCostly
DebugLoc:        { File: dmap.c, Line: 275, Column: 10 }
Function:        dmap_reserve
Args:
  - String:          ''''
  - Callee:          rehash_to
    DebugLoc:        { File: dmap.c, Line: 90, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          dmap_reserve
    DebugLoc:        { File: dmap.c, Line: 274, Column: 0 }
  - String:          ''' because too costly to inline '
  - String:          '(cost='
  - Cost:            '505'
  - String:          ', threshold='
  - Threshold:       '250'
  - String:          ')'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: dmap.c, Line: 35, Column: 21 }
Function:        bufsz_to_chnksz
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: dmap.c, Line: 35, Column: 47 }
Function:        bufsz_to_chnksz
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: dmap.c, Line: 35, Column: 21 }
Function:        dmap
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        dmap
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: dmap.c, Line: 35, Column: 47 }
Function:        dmap
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Analysis
Pass:            loop-vectorize
Name:            NonReductionValueUsedOutsideLoop
DebugLoc:        { File: dmap.c, Line: 56, Column: 5 }
Function:        dmap_find
Args:
  - String:          'loop not vectorized: '
  - String:          value that could not be identified as reduction is used outside the loop
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: dmap.c, Line: 56, Column: 5 }
Function:        dmap_find
Args:
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: dmap.c, Line: 56, Column: 5 }
Function:        dmap_find
Args:
  - String:          loop not vectorized
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        dmap_find
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: dmap.c, Line: 51, Column: 0 }
Function:        dmap_find
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Passed
Pass:            TTI
Name:            DontUnroll
DebugLoc:        { File: dmap.c, Line: 56, Column: 5 }
Function:        dmap_find
Args:
  - String:          'advising against unrolling the loop because it contains a '
  - Call:            call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Passed
Pass:            TTI
Name:            DontUnroll
DebugLoc:        { File: dmap.c, Line: 51, Column: 3 }
Function:        dmap_find
Args:
  - String:          'advising against unrolling the loop because it contains a '
  - Call:            call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: dmap.c, Line: 52, Column: 57 }
Function:        dmap_find
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Analysis
Pass:            loop-vectorize
Name:            NonReductionValueUsedOutsideLoop
DebugLoc:        { File: dmap.c, Line: 56, Column: 5 }
Function:        dmap_contains
Args:
  - String:          'loop not vectorized: '
  - String:          value that could not be identified as reduction is used outside the loop
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: dmap.c, Line: 56, Column: 5 }
Function:        dmap_contains
Args:
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: dmap.c, Line: 56, Column: 5 }
Function:        dmap_contains
Args:
  - String:          loop not vectorized
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        dmap_contains
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: dmap.c, Line: 51, Column: 0 }
Function:        dmap_contains
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Passed
Pass:            TTI
Name:            DontUnroll
DebugLoc:        { File: dmap.c, Line: 56, Column: 5 }
Function:        dmap_contains
Args:
  - String:          'advising against unrolling the loop because it contains a '
  - Call:            call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Passed
Pass:            TTI
Name:            DontUnroll
DebugLoc:        { File: dmap.c, Line: 51, Column: 3 }
Function:        dmap_contains
Args:
  - String:          'advising against unrolling the loop because it contains a '
  - Call:            call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: dmap.c, Line: 52, Column: 57 }
Function:        dmap_contains
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Analysis
Pass:            loop-vectorize
Name:            NonReductionValueUsedOutsideLoop
DebugLoc:        { File: dmap.c, Line: 56, Column: 5 }
Function:        dmap_insert
Args:
  - String:          'loop not vectorized: '
  - String:          value that could not be identified as reduction is used outside the loop
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: dmap.c, Line: 56, Column: 5 }
Function:        dmap_insert
Args:
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: dmap.c, Line: 56, Column: 5 }
Function:        dmap_insert
Args:
  - String:          loop not vectorized
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        dmap_insert
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: dmap.c, Line: 51, Column: 0 }
Function:        dmap_insert
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: dmap.c, Line: 155, Column: 28 }
Function:        dmap_insert
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: dmap.c, Line: 155, Column: 23 }
Function:        dmap_insert
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Passed
Pass:            TTI
Name:            DontUnroll
DebugLoc:        { File: dmap.c, Line: 56, Column: 5 }
Function:        dmap_insert
Args:
  - String:          'advising against unrolling the loop because it contains a '
  - Call:            call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Passed
Pass:            TTI
Name:            DontUnroll
DebugLoc:        { File: dmap.c, Line: 51, Column: 3 }
Function:        dmap_insert
Args:
  - String:          'advising against unrolling the loop because it contains a '
  - Call:            call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: dmap.c, Line: 52, Column: 57 }
Function:        dmap_insert
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Analysis
Pass:            loop-vectorize
Name:            NonReductionValueUsedOutsideLoop
DebugLoc:        { File: dmap.c, Line: 56, Column: 5 }
Function:        dmap_upsert
Args:
  - String:          'loop not vectorized: '
  - String:          value that could not be identified as reduction is used outside the loop
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: dmap.c, Line: 56, Column: 5 }
Function:        dmap_upsert
Args:
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: dmap.c, Line: 56, Column: 5 }
Function:        dmap_upsert
Args:
  - String:          loop not vectorized
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: dmap.c, Line: 23, Column: 3 }
Function:        dmap_upsert
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: dmap.c, Line: 23, Column: 3 }
Function:        dmap_upsert
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: dmap.c, Line: 23, Column: 3 }
Function:        dmap_upsert
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        dmap_upsert
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: dmap.c, Line: 51, Column: 0 }
Function:        dmap_upsert
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: dmap.c, Line: 155, Column: 28 }
Function:        dmap_upsert
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: dmap.c, Line: 155, Column: 23 }
Function:        dmap_upsert
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Passed
Pass:            TTI
Name:            DontUnroll
DebugLoc:        { File: dmap.c, Line: 56, Column: 5 }
Function:        dmap_upsert
Args:
  - String:          'advising against unrolling the loop because it contains a '
  - Call:            call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Passed
Pass:            TTI
Name:            DontUnroll
DebugLoc:        { File: dmap.c, Line: 51, Column: 3 }
Function:        dmap_upsert
Args:
  - String:          'advising against unrolling the loop because it contains a '
  - Call:            call
    DebugLoc:        { File: dmap.c, Line: 61, Column: 11 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: dmap.c, Line: 52, Column: 57 }
Function:        dmap_upsert
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Analysis
Pass:            loop-vectorize
Name:            NonReductionValueUsedOutsideLoop
DebugLoc:        { File: dmap.c, Line: 79, Column: 3 }
Function:        rehash_to
Args:
  - String:          'loop not vectorized: '
  - String:          value that could not be identified as reduction is used outside the loop
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: dmap.c, Line: 79, Column: 3 }
Function:        rehash_to
Args:
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: dmap.c, Line: 79, Column: 3 }
Function:        rehash_to
Args:
  - String:          loop not vectorized
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: dmap.c, Line: 0, Column: 0 }
Function:        rehash_to
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        rehash_to
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        rehash_to
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        rehash_to
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        rehash_to
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: dmap.c, Line: 16, Column: 3 }
Function:        rehash_to
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: dmap.c, Line: 16, Column: 3 }
Function:        rehash_to
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: dmap.c, Line: 16, Column: 3 }
Function:        rehash_to
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Passed
Pass:            slp-vectorizer
Name:            StoresVectorized
DebugLoc:        { File: dmap.c, Line: 96, Column: 16 }
Function:        rehash_to
Args:
  - String:          'Stores SLP vectorized with cost '
  - Cost:            '-1'
  - String:          ' and with tree size '
  - TreeSize:        '2'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        rehash_to
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: dmap.c, Line: 35, Column: 47 }
Function:        rehash_to
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Passed
Pass:            TTI
Name:            DontUnroll
DebugLoc:        { File: dmap.c, Line: 127, Column: 3 }
Function:        rehash_to
Args:
  - String:          'advising against unrolling the loop because it contains a '
  - Call:            call
    DebugLoc:        { File: dmap.c, Line: 132, Column: 13 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: dmap.c, Line: 133, Column: 13 }
Function:        rehash_to
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: dmap.c, Line: 133, Column: 13 }
Function:        rehash_to
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: dmap.c, Line: 136, Column: 11 }
Function:        rehash_to
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: dmap.c, Line: 136, Column: 24 }
Function:        rehash_to
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: dmap.c, Line: 13, Column: 0 }
Function:        keybufat
Args:
  - NumStackBytes:   '0'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 16, Column: 3 }
Function:        keybufat
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: dmap.c, Line: 13, Column: 0 }
Function:        keybufat
Args:
  - NumInstructions: '8'
  - String:          ' instructions in function'
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: dmap.c, Line: 20, Column: 0 }
Function:        valbufat
Args:
  - NumStackBytes:   '0'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 23, Column: 3 }
Function:        valbufat
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '12'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: dmap.c, Line: 20, Column: 0 }
Function:        valbufat
Args:
  - NumInstructions: '12'
  - String:          ' instructions in function'
...
--- !Missed
Pass:            regalloc
Name:            SpillReloadCopies
DebugLoc:        { File: dmap.c, Line: 27, Column: 1 }
Function:        cap_to_bufsz
Args:
  - NumVRCopies:     '2'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '2.000000e+00'
  - String:          ' total copies cost '
  - String:          generated in function
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: dmap.c, Line: 27, Column: 0 }
Function:        cap_to_bufsz
Args:
  - NumStackBytes:   '0'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        cap_to_bufsz
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '18'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: dmap.c, Line: 27, Column: 0 }
Function:        cap_to_bufsz
Args:
  - NumInstructions: '18'
  - String:          ' instructions in function'
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: dmap.c, Line: 34, Column: 0 }
Function:        bufsz_to_chnksz
Args:
  - NumStackBytes:   '0'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        bufsz_to_chnksz
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: dmap.c, Line: 34, Column: 0 }
Function:        bufsz_to_chnksz
Args:
  - NumInstructions: '5'
  - String:          ' instructions in function'
...
--- !Passed
Pass:            stack-protector
Name:            StackProtectorAddressTaken
Function:        dmap
Args:
  - String:          'Stack protection applied to function '
  - Function:        dmap
    DebugLoc:        { File: dmap.c, Line: 163, Column: 0 }
  - String:          ' due to the address of a local variable being taken'
...
--- !Missed
Pass:            regalloc
Name:            SpillReloadCopies
DebugLoc:        { File: dmap.c, Line: 162, Column: 1 }
Function:        dmap
Args:
  - NumVRCopies:     '7'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '5.999999e+00'
  - String:          ' total copies cost '
  - String:          generated in function
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: dmap.c, Line: 163, Column: 0 }
Function:        dmap
Args:
  - NumStackBytes:   '40'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dmap
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '36'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 176, Column: 14 }
Function:        dmap
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '9'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 181, Column: 5 }
Function:        dmap
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dmap
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '9'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 186, Column: 1 }
Function:        dmap
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dmap
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 0, Column: 0 }
Function:        dmap
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: dmap.c, Line: 163, Column: 0 }
Function:        dmap
Args:
  - NumInstructions: '67'
  - String:          ' instructions in function'
...
--- !Passed
Pass:            stack-protector
Name:            StackProtectorAddressTaken
Function:        dmap_destroy
Args:
  - String:          'Stack protection applied to function '
  - Function:        dmap_destroy
    DebugLoc:        { File: dmap.c, Line: 188, Column: 0 }
  - String:          ' due to the address of a local variable being taken'
...
--- !Missed
Pass:            regalloc
Name:            SpillReloadCopies
DebugLoc:        { File: dmap.c, Line: 188, Column: 1 }
Function:        dmap_destroy
Args:
  - NumVRCopies:     '3'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '3.000000e+00'
  - String:          ' total copies cost '
  - String:          generated in function
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: dmap.c, Line: 188, Column: 0 }
Function:        dmap_destroy
Args:
  - NumStackBytes:   '24'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dmap_destroy
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '19'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 193, Column: 1 }
Function:        dmap_destroy
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 0, Column: 0 }
Function:        dmap_destroy
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: dmap.c, Line: 188, Column: 0 }
Function:        dmap_destroy
Args:
  - NumInstructions: '23'
  - String:          ' instructions in function'
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: dmap.c, Line: 56, Column: 5 }
Function:        dmap_find
Args:
  - NumReloads:      '1'
  - String:          ' reloads '
  - TotalReloadsCost: '3.000000e+01'
  - String:          ' total reloads cost '
  - NumFoldedReloads: '3'
  - String:          ' folded reloads '
  - TotalFoldedReloadsCost: '9.000000e+01'
  - String:          ' total folded reloads cost '
  - NumVRCopies:     '2'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '5.906299e+01'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: dmap.c, Line: 51, Column: 8 }
Function:        dmap_find
Args:
  - NumSpills:       '2'
  - String:          ' spills '
  - TotalSpillsCost: '4.905512e+00'
  - String:          ' total spills cost '
  - NumReloads:      '5'
  - String:          ' reloads '
  - TotalReloadsCost: '3.787402e+01'
  - String:          ' total reloads cost '
  - NumFoldedReloads: '4'
  - String:          ' folded reloads '
  - TotalFoldedReloadsCost: '9.195276e+01'
  - String:          ' total folded reloads cost '
  - NumVRCopies:     '3'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '6.101575e+01'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            SpillReloadCopies
DebugLoc:        { File: dmap.c, Line: 195, Column: 1 }
Function:        dmap_find
Args:
  - NumSpills:       '9'
  - String:          ' spills '
  - TotalSpillsCost: '1.190551e+01'
  - String:          ' total spills cost '
  - NumReloads:      '5'
  - String:          ' reloads '
  - TotalReloadsCost: '3.787402e+01'
  - String:          ' total reloads cost '
  - NumFoldedReloads: '5'
  - String:          ' folded reloads '
  - TotalFoldedReloadsCost: '9.201575e+01'
  - String:          ' total folded reloads cost '
  - NumVRCopies:     '8'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '6.601575e+01'
  - String:          ' total copies cost '
  - String:          generated in function
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: dmap.c, Line: 195, Column: 0 }
Function:        dmap_find
Args:
  - NumStackBytes:   '168'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dmap_find
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '31'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 52, Column: 54 }
Function:        dmap_find
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '7'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dmap_find
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 57, Column: 17 }
Function:        dmap_find
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '13'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 59, Column: 9 }
Function:        dmap_find
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '6'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dmap_find
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dmap_find
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '11'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dmap_find
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 197, Column: 3 }
Function:        dmap_find
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '10'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: dmap.c, Line: 195, Column: 0 }
Function:        dmap_find
Args:
  - NumInstructions: '87'
  - String:          ' instructions in function'
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: dmap.c, Line: 56, Column: 5 }
Function:        dmap_contains
Args:
  - NumReloads:      '1'
  - String:          ' reloads '
  - TotalReloadsCost: '3.000000e+01'
  - String:          ' total reloads cost '
  - NumFoldedReloads: '3'
  - String:          ' folded reloads '
  - TotalFoldedReloadsCost: '9.000000e+01'
  - String:          ' total folded reloads cost '
  - NumVRCopies:     '2'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '5.906299e+01'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: dmap.c, Line: 51, Column: 8 }
Function:        dmap_contains
Args:
  - NumSpills:       '2'
  - String:          ' spills '
  - TotalSpillsCost: '4.905512e+00'
  - String:          ' total spills cost '
  - NumReloads:      '5'
  - String:          ' reloads '
  - TotalReloadsCost: '3.787402e+01'
  - String:          ' total reloads cost '
  - NumFoldedReloads: '4'
  - String:          ' folded reloads '
  - TotalFoldedReloadsCost: '9.195276e+01'
  - String:          ' total folded reloads cost '
  - NumVRCopies:     '3'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '6.101575e+01'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            SpillReloadCopies
DebugLoc:        { File: dmap.c, Line: 200, Column: 1 }
Function:        dmap_contains
Args:
  - NumSpills:       '9'
  - String:          ' spills '
  - TotalSpillsCost: '1.190551e+01'
  - String:          ' total spills cost '
  - NumReloads:      '6'
  - String:          ' reloads '
  - TotalReloadsCost: '3.887402e+01'
  - String:          ' total reloads cost '
  - NumFoldedReloads: '5'
  - String:          ' folded reloads '
  - TotalFoldedReloadsCost: '9.201575e+01'
  - String:          ' total folded reloads cost '
  - NumVRCopies:     '7'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '6.501575e+01'
  - String:          ' total copies cost '
  - String:          generated in function
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: dmap.c, Line: 200, Column: 0 }
Function:        dmap_contains
Args:
  - NumStackBytes:   '168'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dmap_contains
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '31'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 52, Column: 54 }
Function:        dmap_contains
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '7'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dmap_contains
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 57, Column: 17 }
Function:        dmap_contains
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '13'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 59, Column: 9 }
Function:        dmap_contains
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '6'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dmap_contains
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dmap_contains
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '11'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dmap_contains
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dmap_contains
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '14'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: dmap.c, Line: 200, Column: 0 }
Function:        dmap_contains
Args:
  - NumInstructions: '91'
  - String:          ' instructions in function'
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: dmap.c, Line: 205, Column: 0 }
Function:        dmap_isset
Args:
  - NumStackBytes:   '0'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 206, Column: 13 }
Function:        dmap_isset
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: dmap.c, Line: 205, Column: 0 }
Function:        dmap_isset
Args:
  - NumInstructions: '5'
  - String:          ' instructions in function'
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: dmap.c, Line: 209, Column: 0 }
Function:        dmap_key
Args:
  - NumStackBytes:   '0'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 16, Column: 3 }
Function:        dmap_key
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: dmap.c, Line: 209, Column: 0 }
Function:        dmap_key
Args:
  - NumInstructions: '8'
  - String:          ' instructions in function'
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: dmap.c, Line: 213, Column: 0 }
Function:        dmap_val
Args:
  - NumStackBytes:   '0'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 23, Column: 3 }
Function:        dmap_val
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '12'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: dmap.c, Line: 213, Column: 0 }
Function:        dmap_val
Args:
  - NumInstructions: '12'
  - String:          ' instructions in function'
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: dmap.c, Line: 56, Column: 5 }
Function:        dmap_insert
Args:
  - NumReloads:      '1'
  - String:          ' reloads '
  - TotalReloadsCost: '2.998536e+01'
  - String:          ' total reloads cost '
  - NumFoldedReloads: '3'
  - String:          ' folded reloads '
  - TotalFoldedReloadsCost: '8.995608e+01'
  - String:          ' total folded reloads cost '
  - NumVRCopies:     '3'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '8.808199e+01'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: dmap.c, Line: 51, Column: 8 }
Function:        dmap_insert
Args:
  - NumSpills:       '2'
  - String:          ' spills '
  - TotalSpillsCost: '4.903368e+00'
  - String:          ' total spills cost '
  - NumReloads:      '5'
  - String:          ' reloads '
  - TotalReloadsCost: '3.785505e+01'
  - String:          ' total reloads cost '
  - NumFoldedReloads: '4'
  - String:          ' folded reloads '
  - TotalFoldedReloadsCost: '9.190776e+01'
  - String:          ' total folded reloads cost '
  - NumVRCopies:     '4'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '9.003368e+01'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            SpillReloadCopies
DebugLoc:        { File: dmap.c, Line: 218, Column: 1 }
Function:        dmap_insert
Args:
  - NumSpills:       '11'
  - String:          ' spills '
  - TotalSpillsCost: '1.390337e+01'
  - String:          ' total spills cost '
  - NumReloads:      '9'
  - String:          ' reloads '
  - TotalReloadsCost: '4.110505e+01'
  - String:          ' total reloads cost '
  - NumFoldedReloads: '5'
  - String:          ' folded reloads '
  - TotalFoldedReloadsCost: '9.197072e+01'
  - String:          ' total folded reloads cost '
  - NumVRCopies:     '14'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '9.772163e+01'
  - String:          ' total copies cost '
  - String:          generated in function
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: dmap.c, Line: 219, Column: 0 }
Function:        dmap_insert
Args:
  - NumStackBytes:   '184'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dmap_insert
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '26'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 157, Column: 34 }
Function:        dmap_insert
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '6'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 40, Column: 16 }
Function:        dmap_insert
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 40, Column: 22 }
Function:        dmap_insert
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '20'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 52, Column: 54 }
Function:        dmap_insert
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '7'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dmap_insert
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 57, Column: 17 }
Function:        dmap_insert
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '13'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 59, Column: 9 }
Function:        dmap_insert
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '7'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dmap_insert
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dmap_insert
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '11'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dmap_insert
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dmap_insert
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 234, Column: 10 }
Function:        dmap_insert
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 240, Column: 8 }
Function:        dmap_insert
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 16, Column: 3 }
Function:        dmap_insert
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '11'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 23, Column: 3 }
Function:        dmap_insert
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '13'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 246, Column: 1 }
Function:        dmap_insert
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: dmap.c, Line: 219, Column: 0 }
Function:        dmap_insert
Args:
  - NumInstructions: '147'
  - String:          ' instructions in function'
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: dmap.c, Line: 56, Column: 5 }
Function:        dmap_upsert
Args:
  - NumReloads:      '1'
  - String:          ' reloads '
  - TotalReloadsCost: '2.998536e+01'
  - String:          ' total reloads cost '
  - NumFoldedReloads: '3'
  - String:          ' folded reloads '
  - TotalFoldedReloadsCost: '8.995608e+01'
  - String:          ' total folded reloads cost '
  - NumVRCopies:     '3'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '8.808199e+01'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: dmap.c, Line: 51, Column: 8 }
Function:        dmap_upsert
Args:
  - NumSpills:       '2'
  - String:          ' spills '
  - TotalSpillsCost: '4.903368e+00'
  - String:          ' total spills cost '
  - NumReloads:      '5'
  - String:          ' reloads '
  - TotalReloadsCost: '3.785505e+01'
  - String:          ' total reloads cost '
  - NumFoldedReloads: '4'
  - String:          ' folded reloads '
  - TotalFoldedReloadsCost: '9.190776e+01'
  - String:          ' total folded reloads cost '
  - NumVRCopies:     '4'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '9.003368e+01'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            SpillReloadCopies
DebugLoc:        { File: dmap.c, Line: 249, Column: 1 }
Function:        dmap_upsert
Args:
  - NumSpills:       '11'
  - String:          ' spills '
  - TotalSpillsCost: '1.390337e+01'
  - String:          ' total spills cost '
  - NumReloads:      '10'
  - String:          ' reloads '
  - TotalReloadsCost: '4.060505e+01'
  - String:          ' total reloads cost '
  - NumFoldedReloads: '5'
  - String:          ' folded reloads '
  - TotalFoldedReloadsCost: '9.197072e+01'
  - String:          ' total folded reloads cost '
  - NumVRCopies:     '17'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '9.922163e+01'
  - String:          ' total copies cost '
  - String:          generated in function
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: dmap.c, Line: 250, Column: 0 }
Function:        dmap_upsert
Args:
  - NumStackBytes:   '184'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dmap_upsert
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '26'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 157, Column: 34 }
Function:        dmap_upsert
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '6'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 40, Column: 16 }
Function:        dmap_upsert
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 40, Column: 22 }
Function:        dmap_upsert
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '20'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 52, Column: 54 }
Function:        dmap_upsert
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '7'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dmap_upsert
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 57, Column: 17 }
Function:        dmap_upsert
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '13'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 59, Column: 9 }
Function:        dmap_upsert
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '7'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dmap_upsert
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dmap_upsert
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '11'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dmap_upsert
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dmap_upsert
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dmap_upsert
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 260, Column: 12 }
Function:        dmap_upsert
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '6'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 264, Column: 10 }
Function:        dmap_upsert
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 16, Column: 3 }
Function:        dmap_upsert
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '24'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 23, Column: 3 }
Function:        dmap_upsert
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '13'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 271, Column: 1 }
Function:        dmap_upsert
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: dmap.c, Line: 250, Column: 0 }
Function:        dmap_upsert
Args:
  - NumInstructions: '163'
  - String:          ' instructions in function'
...
--- !Missed
Pass:            regalloc
Name:            SpillReloadCopies
DebugLoc:        { File: dmap.c, Line: 274, Column: 1 }
Function:        dmap_reserve
Args:
  - NumVRCopies:     '2'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '2.000000e+00'
  - String:          ' total copies cost '
  - String:          generated in function
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: dmap.c, Line: 274, Column: 0 }
Function:        dmap_reserve
Args:
  - NumStackBytes:   '0'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        dmap_reserve
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '18'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: dmap.c, Line: 274, Column: 0 }
Function:        dmap_reserve
Args:
  - NumInstructions: '18'
  - String:          ' instructions in function'
...
--- !Passed
Pass:            stack-protector
Name:            StackProtectorAddressTaken
Function:        rehash_to
Args:
  - String:          'Stack protection applied to function '
  - Function:        rehash_to
    DebugLoc:        { File: dmap.c, Line: 90, Column: 0 }
  - String:          ' due to the address of a local variable being taken'
...
--- !Passed
Pass:            stack-protector
Name:            StackProtectorAddressTaken
Function:        rehash_to
Args:
  - String:          'Stack protection applied to function '
  - Function:        rehash_to
    DebugLoc:        { File: dmap.c, Line: 90, Column: 0 }
  - String:          ' due to the address of a local variable being taken'
...
--- !Passed
Pass:            stack-protector
Name:            StackProtectorAddressTaken
Function:        rehash_to
Args:
  - String:          'Stack protection applied to function '
  - Function:        rehash_to
    DebugLoc:        { File: dmap.c, Line: 90, Column: 0 }
  - String:          ' due to the address of a local variable being taken'
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: dmap.c, Line: 127, Column: 3 }
Function:        rehash_to
Args:
  - NumReloads:      '6'
  - String:          ' reloads '
  - TotalReloadsCost: '4.497752e+01'
  - String:          ' total reloads cost '
  - NumFoldedReloads: '6'
  - String:          ' folded reloads '
  - TotalFoldedReloadsCost: '5.747127e+01'
  - String:          ' total folded reloads cost '
  - NumVRCopies:     '5'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '3.748126e+01'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            SpillReloadCopies
DebugLoc:        { File: dmap.c, Line: 89, Column: 1 }
Function:        rehash_to
Args:
  - NumSpills:       '15'
  - String:          ' spills '
  - TotalSpillsCost: '1.124488e+01'
  - String:          ' total spills cost '
  - NumFoldedSpills: '1'
  - String:          ' folded spills '
  - TotalFoldedSpillsCost: '6.246876e-01'
  - String:          ' total folded spills cost '
  - NumReloads:      '12'
  - String:          ' reloads '
  - TotalReloadsCost: '5.022489e+01'
  - String:          ' total reloads cost '
  - NumFoldedReloads: '6'
  - String:          ' folded reloads '
  - TotalFoldedReloadsCost: '5.747127e+01'
  - String:          ' total folded reloads cost '
  - NumVRCopies:     '10'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '4.248076e+01'
  - String:          ' total copies cost '
  - String:          generated in function
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: dmap.c, Line: 90, Column: 0 }
Function:        rehash_to
Args:
  - NumStackBytes:   '248'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        rehash_to
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '40'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        rehash_to
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '12'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        rehash_to
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '39'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 138, Column: 26 }
Function:        rehash_to
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '17'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 127, Column: 28 }
Function:        rehash_to
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 128, Column: 14 }
Function:        rehash_to
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        rehash_to
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '14'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        rehash_to
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 79, Column: 38 }
Function:        rehash_to
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 83, Column: 9 }
Function:        rehash_to
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '7'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 136, Column: 11 }
Function:        rehash_to
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        rehash_to
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '17'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 152, Column: 1 }
Function:        rehash_to
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 152, Column: 1 }
Function:        rehash_to
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: dmap.c, Line: 0, Column: 0 }
Function:        rehash_to
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: dmap.c, Line: 90, Column: 0 }
Function:        rehash_to
Args:
  - NumInstructions: '180'
  - String:          ' instructions in function'
...
